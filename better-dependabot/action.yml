name: "better-dependabot"
description: "Update NPM Packages and Create PR"
inputs:
  node_version:
    description: 'node version used for the node commands'
    required: false
    default: 'lts/*'
  npm_version:
    description: 'npm version used for the npm commands'
    required: false
    default: ''
  version_target:
    description: 'Determines the version to upgrade to: latest, newest, greatest, minor, patch, semver. (default: patch)'
    required: false
    default: 'patch'
  context:
    description: 'It is used inside the branch name. E.g: You can use it to differentiate multiple PRs in a monorepo'
    default: 'default'
  ncu_args:
    descriptions: 'Extra args for the npm-check-updates'
    required: false
    type: string
  token:
    description: 'A Github PAT'
    required: true
  target_branch:
    description: 'The PR target branch'
    default: 'main'
    required: false
  audit_command:
    description: 'Audit command to use. Default: npm audit --package-lock-only fix'
    default: 'npm audit --package-lock-only --ignore-scripts fix'
    required: false
  package_manager:
    description: 'Package manager to use. Default: npm'
    default: 'npm'
    required: false
  labels:
    description: 'Comma-separated list of labels to apply to the pull request'
    required: false
    default: ''
  working_directory:
    description: 'Change the working directory for the action'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:

    - name: Check for Existing Pull Requests
      id: check_pr
      run: |
        BRANCH_PREFIX="better-dependabot-updates-${{ inputs.context }}-${{ inputs.version_target }}"
        BRANCH_NAME=$BRANCH_PREFIX-$(date +%Y%m%d%H%M%S)
        PR_EXISTS=$(gh pr list --search "head:${BRANCH_PREFIX} type:pr state:open" | wc -l)
        echo "PR_EXISTS=${PR_EXISTS}" >> $GITHUB_ENV
        echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        echo "pr_exists=${PR_EXISTS}" >> $GITHUB_OUTPUT
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: Install node
      if: steps.check_pr.outputs.pr_exists == '0'
      uses: Drassil/gh-actions-collection/extra-info@master
      id: prepare
      with:
        npm_version: ${{ inputs.npm_version }}
        node_version: ${{ inputs.node_version }}

    - name: Install npm-check-updates
      if: steps.check_pr.outputs.pr_exists == '0'
      shell: bash
      run: npm install -g npm-check-updates

    - name: Check npm updates
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0'
      shell: bash
      run: ncu --packageManager ${{ inputs.package_manager }} --target ${{ inputs.version_target }} ${{ inputs.ncu_args }}

    - name: Update package.json
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0'
      shell: bash
      run: ncu -u --packageManager ${{ inputs.package_manager }} --target ${{ inputs.version_target }} ${{ inputs.ncu_args }}

    - name: Install updated packages
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0'
      shell: bash
      run: ${{ inputs.package_manager }} install --package-lock-only  --ignore-scripts

    - name: Audit fix
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0'
      shell: bash
      run: ${{ inputs.audit_command }} || true

    - name: Check for Changes
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0'
      id: check_changes
      run: |
        if git diff --quiet && git diff --staged --quiet; then
          echo "NO_CHANGES=true" >> $GITHUB_ENV
        else
          echo "NO_CHANGES=false" >> $GITHUB_ENV
        fi
      shell: bash

    - name: Create a new branch
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0' && env.NO_CHANGES == 'false'
      run: |
        git checkout -b $BRANCH_NAME
      shell: bash

    - name: Commit changes
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0' && env.NO_CHANGES == 'false'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add --all
        git commit -m "Update dependencies"
        git push --set-upstream origin $BRANCH_NAME
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GH_TOKEN: ${{ inputs.token }}

    - name: Create Pull Request
      working-directory: ${{ inputs.working_directory }}
      if: steps.check_pr.outputs.pr_exists == '0' && env.NO_CHANGES == 'false'
      run: |
        LABELS="${{ inputs.labels }}"
        if [ -z "$LABELS" ]; then
          gh pr create --title "Better Dependabot: Update ${{ inputs.context }} ${{ inputs.version_target }} dependencies" --body "This PR updates dependencies to the most recent ${{ inputs.version_target }} versions." --head $BRANCH_NAME --base ${{ inputs.target_branch }}
        else
          gh pr create --title "Better Dependabot: Update ${{ inputs.context }} ${{ inputs.version_target }} dependencies" --body "This PR updates dependencies to the most recent ${{ inputs.version_target }} versions." --head $BRANCH_NAME --base ${{ inputs.target_branch }} --label "$LABELS"
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        GH_TOKEN: ${{ inputs.token }}

