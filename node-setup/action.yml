name: 'action-node-setup'
description: 'It install your npm modules with cache support and injects in your pipeline extra info that can be used by your workflows (extra-info action included)'
outputs:
  github_branch:
    description: 'Github branch name'
  package_version:
    description: 'The package version of the repository. PACKAGE_VERSION env variable is also exported.'
inputs:
  node_version:
    description: 'node version used for the node commands'
    required: false
    default: '16'
  npm_version:
    description: 'npm version used for the npm commands'
    required: falses
    default: '8.5'
  package_json_path:
    description: 'Path of the package.json to retrieve the package version'
    required: false
    default: ''
  project_id:
    description: 'Project identifier to avoid cache collisions with other workflows'
    required: false
    default: 'default'
  install_command:
    description: 'NPM install command. default: install'
    required: false
    default: 'install'
runs:
  using: 'composite'
  steps:
    - name: Preparation
      uses: Drassil/gh-actions-collection/extra-info@master
      id: preparation
      with:
        npm_version: ${{ inputs.npm_version }}
        node_version: ${{ inputs.node_version }}
        package_json_path: ${{ inputs.package_json_path }}

    - name: Set outputs
      shell: bash
      run: |
        echo '::set-output name=github_branch::${{ steps.preparation.outputs.github_branch }}'
        echo '::set-output name=package_version::${{ steps.preparation.outputs.package_version }}'

    - name: Cache global npm
      uses: actions/cache@v2
      env:
        cache-name: cache-${{ inputs.project_id }}-global-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Cache local node_modules
      uses: actions/cache@v2
      env:
        cache-name: cache-${{ inputs.project_id }}-modules
      with:
        path: ${{ env.GITHUB_WORKSPACE }}/node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install modules
      shell: bash
      run: |
        cd ${{ github.workspace }} 
        npm ${{ inputs.install_command }}
